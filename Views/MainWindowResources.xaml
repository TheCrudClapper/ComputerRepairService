<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:ComputerRepairService.ViewModels"
                    xmlns:vw="clr-namespace:ComputerRepairService.Views"
                    xmlns:ViewsMany="clr-namespace:ComputerRepairService.Views.Many"
                    xmlns:ViewsModelsMany="clr-namespace:ComputerRepairService.ViewModels.Many"
                    xmlns:ViewModelsSingle ="clr-namespace:ComputerRepairService.ViewModels.Single"
                    xmlns:ViewsSingle="clr-namespace:ComputerRepairService.Views.Single"
                    xmlns:BusinessViews ="clr-namespace:ComputerRepairService.Views.BusinessViews"
                    xmlns:BusinessViewModels ="clr-namespace:ComputerRepairService.ViewModels.Business"
                    >

    <DataTemplate DataType="{x:Type vm:AddCustomerViewModel}">
        <vw:AddCustomerView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AddEmployeeViewModel}">
        <vw:AddEmployeeView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:EmployeesViewModel}">
        <ViewsMany:EmployeesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:CustomersViewModel}">
        <ViewsMany:CustomersView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AddNewPositionViewModel}">
        <vw:AddNewPositionView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:PositionsViewModel}">
        <ViewsMany:RolesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:PartCategoriesViewModel}">
        <ViewsMany:PartCategoriesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AddPartCategoryViewModel}">
        <vw:AddPartCategory/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:SuppliersViewModel}">
        <ViewsMany:SuppliersView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AddSupplierViewModel}">
        <vw:AddSupplierView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:AddServiceViewModel}">
        <ViewsSingle:AddServiceView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:ServicesViewModel}">
        <ViewsMany:ServicesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:AddPartViewModel}">
        <ViewsSingle:AddPartView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:PartsViewModel}">
        <ViewsMany:PartsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:InvoicesViewModel}">
        <ViewsMany:InvoicesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:FeedbacksViewModel}">
        <ViewsMany:FeedbacksView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:AddInvoiceViewModel}">
        <ViewsSingle:AddInvoiceView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:AddOrderViewModel}">
        <ViewsSingle:AddOrderView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:OrdersViewModels}">
        <ViewsMany:OrdersView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:RepairsViewModel}">
        <ViewsMany:RepairsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:AddNewRepairViewModel}">
        <ViewsSingle:AddNewRepairView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:AddScheduleViewModel}">
        <ViewsSingle:AddScheduleView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:SchedulesViewModel}">
        <ViewsMany:SchedulesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:JobPartViewModel}">
        <ViewsSingle:JobPartView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:JobServiceViewModel}">
        <ViewsSingle:JobServiceView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewModelsSingle:JobStatusViewModel}">
        <ViewsSingle:JobStatusView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ViewsModelsMany:JobStatusesViewModel}">
        <ViewsMany:JobStatusesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type BusinessViewModels:DashboardViewModel}">
        <BusinessViews:DashboardView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type BusinessViewModels:RaportViewModel}">
        <BusinessViews:RaportView/>
    </DataTemplate>

    <Style	TargetType="TextBox" x:Key="TextBoxValidation">
        <Style.Triggers>
            <Trigger  Property="Validation.HasError"  Value="true">
                <Setter  Property="ToolTip"
 	            Value="{Binding  RelativeSource={x:Static RelativeSource.Self},
 	            Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style	TargetType="ComboBox" x:Key="ComboBoxValidation">
        <Style.Triggers>
            <Trigger  Property="Validation.HasError"  Value="true">
                <Setter  Property="ToolTip"
	            Value="{Binding  RelativeSource={x:Static RelativeSource.Self},
	            Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style	TargetType="DatePicker" x:Key="DatePickerValidation">
        <Style.Triggers>
            <Trigger  Property="Validation.HasError"  Value="true">
                <Setter  Property="ToolTip"
            Value="{Binding  RelativeSource={x:Static RelativeSource.Self},
            Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
                <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" Margin="1" Padding="5" Background="AliceBlue" BorderThickness="1"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    
    <DataTemplate x:Key="ClosableTabItemTemplate">

        <DockPanel Width="120">
            <Button 
            Command="{Binding Path=CloseCommand}"
            Content="X"
            Cursor="Hand"
            BorderBrush="#3d0c59"
            DockPanel.Dock="Right"
            Focusable="False"
            FontFamily="Courier" 
            FontSize="9"
            FontWeight="Bold"  
            Margin="0,1,0,0"
            Padding="0"
            VerticalContentAlignment="Bottom"
            Width="16" Height="16" 
            />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      Background="AliceBlue"
      BorderBrush="#3d0c59"
      />
    </DataTemplate>

    <Style x:Key="FiltersDatePicker" TargetType="DatePicker">
        <Setter Property="Width" Value="120"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="FiltersSearchInput" TargetType="TextBox">
        <Setter Property="Width" Value="150"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="FiltersComboBox" TargetType="ComboBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="110"/>
    </Style>

    <Style x:Key="MainMenuButton" TargetType="MenuItem">
        <Setter Property="Background" Value="#3d0c59" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#070959"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0 0 8 0 "/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="MainMenuSubOption" TargetType="MenuItem">
        <Setter Property="Background" Value="#863cb0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#070959"/>
        <Setter Property="Margin" Value="0,2,0,0"/>

    </Style>

    <Style x:Key="MainMenuSeparator" TargetType="Separator">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="SideMenuButtons" TargetType="Button">
        <Setter Property="Background" Value="#3d0c59" />
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#070959"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    
    <Style x:Key="CustomToolbar" TargetType="StackPanel">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Background" Value="#863cb0"/>
    </Style>
    
    <Style x:Key="CustomToolbarButtons" TargetType="Button">
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="16"/>
    </Style>
    <Style x:Key="CardStyle" TargetType="ContentControl">
        <Setter Property="Width" Value="400"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="#3d0c59"
                        BorderBrush="#e9b8f2"
                        BorderThickness="2"
                        CornerRadius="10"
                        Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--Number on the left-->
                            <TextBlock Text="{Binding Value}" 
                                   Foreground="White"
                                   FontWeight="Bold" 
                                   Width="50"
                                   FontSize="40"
                                   VerticalAlignment="Center"
                                   Margin="20,0,20,0"
                                   Grid.Column="0"/>

                            <!-- Right columnd -->
                            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                <!-- Small title on top -->
                                <TextBlock Text="{Binding Title}" 
                                       Foreground="White"
                                       FontSize="14" 
                                       FontWeight="SemiBold"/>

                                <!-- Description on the bottom -->
                                <TextBlock Text="{Binding Description}" 
                                       Foreground="White"
                                       FontSize="18" 
                                       FontWeight="Medium"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
    